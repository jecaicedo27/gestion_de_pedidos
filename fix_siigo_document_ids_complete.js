const fs = require('fs');

console.log('üîß Corrigiendo IDs de documentos SIIGO para eliminar errores 400...\n');

// Archivos que necesitan correcci√≥n
const filesToFix = [
  {
    file: 'backend/services/siigoInvoiceService.js',
    changes: [
      {
        search: 'documentId: 15047, // FV-1 - Factura No Electr√≥nica',
        replace: 'documentId: 5152, // FV-1 - Factura No Electr√≥nica'
      }
    ]
  },
  {
    file: 'backend/controllers/quotationController.js',
    changes: [
      {
        search: "'FV-1': 5153, // Factura no electr√≥nica",
        replace: "'FV-1': 5152, // Factura no electr√≥nica"
      },
      {
        search: 'documentId: documentConfig[documentType] || 5153',
        replace: 'documentId: documentConfig[documentType] || 5152'
      }
    ]
  }
];

let totalFixed = 0;

filesToFix.forEach(({ file, changes }) => {
  console.log(`üìñ Procesando ${file}...`);
  
  try {
    if (!fs.existsSync(file)) {
      console.log(`   ‚ö†Ô∏è Archivo no encontrado: ${file}`);
      return;
    }

    let content = fs.readFileSync(file, 'utf8');
    let fileChanged = false;

    changes.forEach(({ search, replace }) => {
      if (content.includes(search)) {
        content = content.replace(search, replace);
        console.log(`   ‚úÖ Cambiado: ${search.substring(0, 50)}...`);
        fileChanged = true;
        totalFixed++;
      } else {
        console.log(`   ‚ÑπÔ∏è No se encontr√≥: ${search.substring(0, 50)}...`);
      }
    });

    if (fileChanged) {
      fs.writeFileSync(file, content, 'utf8');
      console.log(`   üíæ Archivo actualizado exitosamente`);
    } else {
      console.log(`   ‚ÑπÔ∏è No se realizaron cambios en este archivo`);
    }

  } catch (error) {
    console.error(`   ‚ùå Error procesando ${file}:`, error.message);
  }
  
  console.log('');
});

console.log(`üéØ Correcci√≥n completada:`);
console.log(`   ‚Ä¢ ${totalFixed} cambios realizados`);
console.log(`   ‚Ä¢ Document ID corregido de 15047/5153 ‚Üí 5152`);
console.log(`   ‚Ä¢ Esto deber√≠a eliminar los errores 400 al crear facturas`);

if (totalFixed > 0) {
  console.log('\nüìã Pr√≥ximos pasos recomendados:');
  console.log('   1. El backend se reiniciar√° autom√°ticamente');
  console.log('   2. Probar creaci√≥n de factura desde cotizaciones');
  console.log('   3. Verificar que no aparezcan m√°s errores 400');
} else {
  console.log('\n‚ö†Ô∏è No se realizaron cambios. Es posible que ya est√©n corregidos.');
}
