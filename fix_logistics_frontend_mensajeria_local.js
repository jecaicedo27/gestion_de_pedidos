const fs = require('fs');
const path = require('path');

// Funci√≥n para actualizar el componente DeliveryRegistrationModal
function updateDeliveryRegistrationModal() {
  const filePath = path.join(__dirname, 'frontend', 'src', 'components', 'DeliveryRegistrationModal.js');
  
  try {
    let content = fs.readFileSync(filePath, 'utf8');
    
    // Buscar la secci√≥n de categor√≠as y verificar si falta mensajeria_local
    if (!content.includes('mensajeria_local:')) {
      console.log('‚úÖ Actualizando DeliveryRegistrationModal para incluir mensajeria_local...');
      
      // Buscar el lugar donde est√°n definidas las categor√≠as
      const searchPattern = /otros:\s*{\s*title:\s*['"]Sin Asignar['"],[\s\S]*?color:\s*['"]bg-gray-500['"]\s*}/;
      
      if (searchPattern.test(content)) {
        // Agregar mensajeria_local antes de "otros"
        const replacement = `mensajeria_local: {
        title: 'Mensajer√≠a Local',
        icon: MessageSquare,
        description: 'Entregas locales sin mensajero asignado',
        color: 'bg-purple-500'
      },
      otros: {
        title: 'Sin Asignar',
        icon: HelpCircle,
        description: 'Pedidos que requieren clasificaci√≥n',
        color: 'bg-gray-500'
      }`;
        
        content = content.replace(searchPattern, replacement);
        
        fs.writeFileSync(filePath, content);
        console.log('‚úÖ DeliveryRegistrationModal actualizado correctamente');
      } else {
        console.log('‚ö†Ô∏è No se encontr√≥ el patr√≥n esperado en DeliveryRegistrationModal');
      }
    } else {
      console.log('‚úÖ DeliveryRegistrationModal ya incluye mensajeria_local');
    }
  } catch (error) {
    console.error('‚ùå Error actualizando DeliveryRegistrationModal:', error.message);
  }
}

// Funci√≥n para verificar si hay alg√∫n componente de p√°gina de log√≠stica
function checkLogisticsPageComponent() {
  const possiblePaths = [
    path.join(__dirname, 'frontend', 'src', 'pages', 'LogisticsPage.js'),
    path.join(__dirname, 'frontend', 'src', 'pages', 'DeliveryPage.js'),
    path.join(__dirname, 'frontend', 'src', 'pages', 'ShippingPage.js')
  ];
  
  for (const filePath of possiblePaths) {
    if (fs.existsSync(filePath)) {
      console.log(`üìÑ Encontrado componente de p√°gina: ${path.basename(filePath)}`);
      
      let content = fs.readFileSync(filePath, 'utf8');
      
      // Verificar si usa DeliveryRegistrationModal
      if (content.includes('DeliveryRegistrationModal')) {
        console.log('‚úÖ El componente usa DeliveryRegistrationModal');
        
        // Verificar si ya maneja mensajeria_local
        if (!content.includes('mensajeria_local')) {
          console.log('‚ö†Ô∏è El componente NO maneja mensajeria_local expl√≠citamente');
          console.log('   Pero deber√≠a funcionar si DeliveryRegistrationModal est√° actualizado');
        }
      }
    }
  }
}

// Funci√≥n principal
function main() {
  console.log('üîß ACTUALIZANDO FRONTEND PARA MENSAJER√çA LOCAL\n');
  
  // 1. Actualizar DeliveryRegistrationModal
  updateDeliveryRegistrationModal();
  
  // 2. Verificar componentes de p√°gina
  console.log('\nüìã Verificando componentes de p√°gina...');
  checkLogisticsPageComponent();
  
  console.log('\n‚úÖ ACTUALIZACI√ìN COMPLETADA');
  console.log('   - El frontend ahora deber√≠a mostrar la categor√≠a "Mensajer√≠a Local"');
  console.log('   - Los pedidos con delivery_method = "mensajeria_local" aparecer√°n en su propia secci√≥n');
  console.log('\nüîÑ Recuerda reiniciar la aplicaci√≥n para ver los cambios');
}

// Ejecutar
main();
