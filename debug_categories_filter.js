const { pool } = require('./backend/config/database');

async function debugCategoriesFilter() {
    console.log('üîç Debuggeando filtro de categor√≠as...');
    
    try {
        // 1. Ver cu√°ntas categor√≠as √∫nicas hay en la base de datos
        console.log('\nüìä Categor√≠as √∫nicas en la base de datos:');
        const [categories] = await pool.execute(`
            SELECT category, COUNT(*) as count 
            FROM products 
            WHERE category IS NOT NULL AND category != '' AND category != 'Sin categor√≠a'
            GROUP BY category 
            ORDER BY category
        `);
        
        console.log('üìÇ Categor√≠as encontradas:');
        categories.forEach((cat, index) => {
            console.log(`${index + 1}. "${cat.category}" (${cat.count} productos)`);
        });
        
        console.log(`\nüìä Total de categor√≠as √∫nicas: ${categories.length}`);
        
        // 2. Ver tambi√©n las categor√≠as incluyendo "Sin categor√≠a"
        console.log('\nüìä Incluye tambi√©n productos "Sin categor√≠a":');
        const [allCategories] = await pool.execute(`
            SELECT category, COUNT(*) as count 
            FROM products 
            GROUP BY category 
            ORDER BY category
        `);
        
        console.log('üìÇ Todas las categor√≠as:');
        allCategories.forEach((cat, index) => {
            console.log(`${index + 1}. "${cat.category || 'NULL'}" (${cat.count} productos)`);
        });
        
        // 3. Probar el endpoint de categor√≠as directamente
        console.log('\nüåê Probando endpoint de categor√≠as...');
        const axios = require('axios');
        
        try {
            const response = await axios.get('http://localhost:3001/api/products/categories');
            console.log('‚úÖ Respuesta del endpoint /api/products/categories:');
            console.log(JSON.stringify(response.data, null, 2));
        } catch (endpointError) {
            console.error('‚ùå Error consultando endpoint:', endpointError.message);
        }
        
        // 4. Ver algunas categor√≠as espec√≠ficas que deber√≠an estar
        console.log('\nüîç Verificando categor√≠as espec√≠ficas que deber√≠an estar:');
        const expectedCategories = ['LIQUIPOPS', 'MEZCLAS EN POLVO', 'GENIALITY', 'Materia prima gravadas 19%'];
        
        for (const expectedCat of expectedCategories) {
            const [found] = await pool.execute(
                'SELECT COUNT(*) as count FROM products WHERE category = ?',
                [expectedCat]
            );
            console.log(`üìÇ "${expectedCat}": ${found[0].count} productos`);
        }
        
    } catch (error) {
        console.error('‚ùå Error:', error);
    } finally {
        process.exit(0);
    }
}

debugCategoriesFilter();
