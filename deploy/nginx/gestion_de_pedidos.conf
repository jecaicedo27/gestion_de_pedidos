# Nginx site config for Gestion de Pedidos (PM2 backend + React frontend build)
# Place this file on the VPS at: /etc/nginx/sites-available/gestion_de_pedidos
# Then enable with: ln -s /etc/nginx/sites-available/gestion_de_pedidos /etc/nginx/sites-enabled/
# Make sure the project is deployed at /var/www/gestion_de_pedidos and frontend build at /var/www/gestion_de_pedidos/frontend/build

# ==============================
# HTTP - redirect to HTTPS
# ==============================
server {
  listen 80;
  listen [::]:80;
  server_name YOUR_DOMAIN_OR_IP_HERE;

  # Allow Let's Encrypt HTTP-01 challenge
  location /.well-known/acme-challenge/ {
    root /var/www/html;
  }

  # Redirect everything else to HTTPS
  location / {
    return 301 https://$host$request_uri;
  }
}

# ==============================
# HTTPS - main site
# After obtaining certs with certbot, update ssl_certificate paths below
# Example:
# ssl_certificate /etc/letsencrypt/live/YOUR_DOMAIN/fullchain.pem;
# ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN/privkey.pem;
# ==============================
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name YOUR_DOMAIN_OR_IP_HERE;

  # SSL (fill after running certbot)
  ssl_certificate /etc/ssl/certs/placeholder.crt;
  ssl_certificate_key /etc/ssl/private/placeholder.key;
  ssl_session_timeout 1d;
  ssl_session_cache shared:MozSSL:10m;
  ssl_session_tickets off;

  # Modern TLS config (Mozilla intermediate)
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
  ssl_prefer_server_ciphers off;

  # Security headers
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options SAMEORIGIN;
  add_header X-XSS-Protection "1; mode=block";
  add_header Referrer-Policy "no-referrer-when-downgrade";
  add_header Content-Security-Policy "default-src 'self' data: blob: filesystem: https: http: 'unsafe-inline' 'unsafe-eval'; img-src 'self' data: blob: https: http:; media-src 'self' data: blob: https: http:;" always;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  # Gzip
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;

  # Frontend (React build)
  root /var/www/gestion_de_pedidos/frontend/build;
  index index.html;

  # Serve static assets with caching
  location ~* \.(?:js|css|svg|eot|otf|ttf|woff|woff2|jpg|jpeg|gif|png|ico)$ {
    try_files $uri =404;
    access_log off;
    expires 30d;
    add_header Cache-Control "public, max-age=2592000, immutable";
  }

  # React SPA fallback to index.html
  location / {
    try_files $uri /index.html;
  }

  # Backend API reverse proxy
  location /api/ {
    proxy_pass http://127.0.0.1:3001/api/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 300;
    proxy_connect_timeout 60;
    proxy_send_timeout 60;
  }

  # WebSocket path examples (if your backend uses socket.io or similar)
  # location /socket.io/ {
  #   proxy_pass http://127.0.0.1:3001/socket.io/;
  #   proxy_http_version 1.1;
  #   proxy_set_header Upgrade $http_upgrade;
  #   proxy_set_header Connection "upgrade";
  #   proxy_set_header Host $host;
  #   proxy_set_header X-Real-IP $remote_addr;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_set_header X-Forwarded-Proto $scheme;
  # }

  # Max upload size if needed (match backend limits)
  client_max_body_size 20M;

  # Logs
  access_log /var/log/nginx/gestion_de_pedidos.access.log;
  error_log  /var/log/nginx/gestion_de_pedidos.error.log;
}
